pipeline {
    agent any
    environment {
   PATH = "/opt/apache-maven-3.8.6/bin/:$PATH" 
      
        def CRDID = 'Nexus'
        def GRPID = 'in.javahome'
        def NXURL = '3.110.157.192:8081'
        def NXVRN = 'nexus3'
        def PROTO = 'http'
        def REPO  = 'Sample-app'
        def ARTIFACT = 'simple-app'
    }
    stages{
        stage('Git CheckOut')
        {
            steps{
                git 'https://github.com/ankupsatpute/simple-app.git' // 
                echo "Git Checkout Completed"
       
            }
        }
         stage('Unit Test'){
                steps{
                    sh 'mvn test'
                }
            }
            stage('Build The Code'){
            steps{
                sh 'mvn clean install -DskipTest'
               }
            }
            stage('Check Code Coverage'){
               steps{
                    junit '**/target/surefire-reports/TEST-*.xml'
                    echo 'The Junit is Sucessfull'
                    jacoco ()
                    echo 'The Code Coverage is Sucessfull'
                }
            }
              /*stage('Code Analysis With SonarQube'){
               steps{
                withSonarQubeEnv('sonarqube-8.9.10.61524'){
                    sh'mvn sonar:sonar -Dsonar.projectKey=Ansible'
                    
                }
               }
            }*/
        
      stage('Upload the Artifact'){
            steps{
                 script{
                  def mavenPom = readMavenPom file: 'pom.xml'
                  
                    nexusArtifactUploader artifacts:[
                     [artifactId: "${env.ARTIFACT}",
                     classifier: '', 
                     file: "target/simple-app-${mavenPom.version}.${mavenPom.packaging}",
                     type: "${mavenPom.packaging}"]
                     ],
                     credentialsId: "${env.CRDID}",
                     groupId: "${env.GRPID}",
                     nexusUrl: "${env.NXURL}",
                     nexusVersion: "${env.NXVRN}", 
                     protocol: "${env.PROTO}", 
                     repository: "${env.REPO}", 
                     version: "${mavenPom.version}"
                 }
            }
        }
        stage("Pull the Code From Artifact"){
            agent{
                label 'Ansible_Master'
            }
           steps {
               withCredentials([usernamePassword(credentialsId: 'Nexus_Pull', passwordVariable: 'pass', usernameVariable: 'user')]) {
              sh  'curl -L -u admin:admin -X GET "http://3.110.157.192:8081/service/rest/v1/search/assets/download?sort=version&repository=Sample-app&maven.groupId=in.javahome&maven.artifactId=simple-app&maven.extension=war" --output simple-app1.war'
              sh  'mv simple-app1.war app1.war'
              //sh 'wget --user=$user --password=$pass http://3.110.157.192:8081/repository/Sample-app/in/javahome/simple-app/3.0.0/simple-app-3.0.0.war'
               }
               
            }
        }
             stage("Deploy"){
            agent{
                label 'Ansible_Master'
            }
            steps{
            ansiblePlaybook credentialsId: 'Ansible_Master', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/etc/ansible/copy.yml'
             echo 'Tomcat Deployment is done'
             sh 'rm -rf /tmp/Download/workspace/LTI_DEMO_PROJECT/app1.war'
               }
             }
            
             
             
             
    }
    
}
